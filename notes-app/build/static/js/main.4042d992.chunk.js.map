{"version":3,"sources":["components/Note.js","components/NoteList.js","components/Library.js","components/Editor.js","components/Wrapper.js","logo.svg","components/Loader.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Note","title","createdAt","noteText","isActive","listID","noteList","setNoteList","setEditorTitle","setEditorDate","setEditorText","className","data-listid","onClick","e","index","parseInt","target","dataset","listid","eTitle","props","eDate","eText","reselectedNoteList","map","note","i","dateForSort","key","length","substring","concat","NoteList","NoteListComp","undefined","sort","n1","n2","uuidv4","id","Library","currentDate","today","Date","dd","String","getDate","padStart","MM","getMonth","yyyy","getFullYear","hh","getHours","mm","getMinutes","ss","getSeconds","ListOfNotes","date","newNote","unselectedNoteList","Editor","editorTitle","editorDate","editorText","rows","value","onChange","changedTitleList","c","e1","e2","forEach","newTitle","newDate","newText","filter","changedTextList","Wrapper","useState","appStatus","setAppStatus","noteListFromLS","localStorageValue","localStorage","getItem","newNotesList","JSON","parse","useEffect","newList","stringify","setItem","Loader","loaderOpacity","setLoaderOpacity","loaderDisplay","setLoaderDisplay","imgOpacity","setImgOpacity","setTimeout","style","opacity","display","src","loaderImg","alt","Info","infoDisplay","infoOpacity","document","getElementById","contains","setInfoOpacity","setInfoDisplay","closeInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4042d992.chunk.js","sourcesContent":["function Note({title, createdAt, noteText, isActive, listID, noteList, setNoteList, setEditorTitle, setEditorDate, setEditorText }){\r\n    \r\n    const changeActiveNote = (e) => {\r\n        let index = parseInt(e.target.dataset.listid); \r\n        let eTitle = noteList[index].props.title;      \r\n        let eDate = noteList[index].props.createdAt;      \r\n        let eText = noteList[index].props.noteText;      \r\n        let reselectedNoteList = noteList.map((note, i) => {\r\n            return <Note\r\n                        key={note.key}\r\n                        title={note.props.title}\r\n                        createdAt={note.props.createdAt}\r\n                        noteText={note.props.noteText}\r\n                        dateForSort={note.props.dateForSort}\r\n                        isActive={(i === index) ? 'note active' : 'note'}\r\n                        listID={note.props.listID}\r\n                        noteList={note.props.noteList}\r\n                        setNoteList={note.props.setNoteList}\r\n                        setEditorTitle={note.props.setEditorTitle}\r\n                        setEditorDate={note.props.setEditorDate}\r\n                        setEditorText={note.props.setEditorText}\r\n                    />\r\n        })\r\n\r\n        //Update states\r\n        setNoteList(reselectedNoteList)\r\n        setEditorTitle(eTitle)\r\n        setEditorDate(eDate)\r\n        setEditorText(eText)\r\n    }\r\n\r\n    return(\r\n        <div className={isActive} data-listid={listID} onClick={changeActiveNote} >\r\n            <h1>{(title.length > 20) ? title.substring(0,20).concat('...') : title}</h1>\r\n            <h5>{createdAt}</h5>\r\n            <p>{(noteText.length > 20) ? noteText.substring(0,20).concat('...') : noteText }</p>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import Note from './Note.js';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction NoteList(noteList, setNoteList){\r\n    \r\n    const NoteListComp = (noteList) => {\r\n        if (noteList.noteList.noteList.noteList !== undefined) {\r\n            let newNoteList = noteList.noteList.noteList.noteList.sort((n1, n2) => n2.props.dateForSort - n1.props.dateForSort).map((note, i) => {\r\n                return <Note \r\n                            key={uuidv4()}\r\n                            title={note.props.title}\r\n                            createdAt={note.props.createdAt}\r\n                            noteText={note.props.noteText}\r\n                            isActive={note.props.isActive}\r\n                            listID={i}\r\n                            noteList={noteList.noteList.noteList.noteList}\r\n                            setNoteList={note.props.setNoteList}\r\n                            setEditorTitle={note.props.setEditorTitle}\r\n                            setEditorDate={note.props.setEditorDate}\r\n                            setEditorText={note.props.setEditorText}\r\n                        />\r\n            })\r\n            return newNoteList;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"library-notes\">\r\n            <NoteListComp noteList={noteList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteList;","import { FaRegEdit } from 'react-icons/fa';\r\nimport NoteList from './NoteList.js';\r\nimport Note from './Note';\r\n\r\nfunction Library({noteList, setNoteList, setEditorTitle, setEditorDate, setEditorText }){\r\n\r\n    const currentDate = () => {\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let MM = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = today.getFullYear();\r\n        let hh = String(today.getHours()).padStart(2, '0');\r\n        let mm = String(today.getMinutes()).padStart(2, '0');\r\n        let ss = String(today.getSeconds()).padStart(2, '0');\r\n        return `${yyyy}/${MM}/${dd} - ${hh}:${mm}:${ss}`;\r\n    }\r\n\r\n    const createNote = () => {\r\n        let [title, date, noteText, isActive] = ['New note', currentDate(), 'Type here your notes', 'note active'];\r\n        let newNote = (<Note \r\n                            title={title}\r\n                            createdAt={date}\r\n                            noteText={noteText}\r\n                            dateForSort={new Date()}\r\n                            isActive={isActive}\r\n                            noteList={noteList}\r\n                            setNoteList={setNoteList}\r\n                            setEditorTitle={setEditorTitle}\r\n                            setEditorDate={setEditorDate}\r\n                            setEditorText={setEditorText}\r\n                         />)\r\n        let unselectedNoteList = noteList !== undefined \r\n            ? noteList.sort((n1, n2) => n2.props.dateForSort - n1.props.dateForSort).map(note => {\r\n                return <Note \r\n                            key={note.key}\r\n                            title={note.props.title}\r\n                            createdAt={note.props.createdAt}\r\n                            noteText={note.props.noteText}\r\n                            dateForSort={note.props.dateForSort}\r\n                            isActive='note'\r\n                            listID={note.props.listID}\r\n                            noteList={note.props.noteList}\r\n                            setNoteList={note.props.setNoteList}\r\n                            setEditorTitle={note.props.setEditorTitle}\r\n                            setEditorDate={note.props.setEditorDate}\r\n                            setEditorText={note.props.setEditorText}\r\n                        />\r\n            }) \r\n            : null;\r\n\r\n        //Update components\r\n        setNoteList(noteList !== undefined ? [newNote, ...unselectedNoteList] : [newNote])\r\n        setEditorTitle(title);\r\n        setEditorDate(date);\r\n        setEditorText(noteText);\r\n    }\r\n\r\n    const ListOfNotes = (noteList) => {\r\n        if (noteList){\r\n            return <NoteList noteList={noteList} setNoteList={setNoteList} />\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"library\">\r\n            <div id=\"library-header\">\r\n                <h1>Notes</h1>\r\n                <FaRegEdit id=\"library-edit-btn\" onClick={createNote} />\r\n            </div>\r\n            <ListOfNotes noteList={noteList} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Library;","import { FaTrashAlt } from 'react-icons/fa';\r\nimport Note from './Note'\r\n\r\nfunction Editor({editorTitle, editorDate, editorText, setEditorTitle, setEditorText, setEditorDate, noteList, setNoteList}){\r\n    \r\n    const changeTitle = (e) => {\r\n        setEditorTitle(e.target.value)\r\n        const changedTitleList = noteList.map(note =>{\r\n            return <Note\r\n                key={note.key}\r\n                title={(note.props.isActive === \"note active\") ? e.target.value : note.props.title}\r\n                createdAt={note.props.createdAt}\r\n                noteText={note.props.noteText}\r\n                dateForSort={note.props.dateForSort}\r\n                isActive={(note.props.isActive === \"note active\") ? 'note active' : 'note'}\r\n                listID={note.props.listID}\r\n                noteList={note.props.noteList}\r\n                setNoteList={note.props.setNoteList}\r\n                setEditorTitle={note.props.setEditorTitle}\r\n                setEditorDate={note.props.setEditorDate}\r\n                setEditorText={note.props.setEditorText}\r\n            />\r\n        })\r\n        setNoteList(changedTitleList)\r\n    }\r\n\r\n    const changeText = (e) => {\r\n        setEditorText(e.target.value)\r\n        const changedTextList = noteList.map(note =>{\r\n            return <Note\r\n                key={note.key}\r\n                title={note.props.title}\r\n                createdAt={note.props.createdAt}\r\n                noteText={(note.props.isActive === \"note active\") ? e.target.value : note.props.noteText}\r\n                dateForSort={note.props.dateForSort}\r\n                isActive={(note.props.isActive === \"note active\") ? 'note active' : 'note'}\r\n                listID={note.props.listID}\r\n                noteList={note.props.noteList}\r\n                setNoteList={note.props.setNoteList}\r\n                setEditorTitle={note.props.setEditorTitle}\r\n                setEditorDate={note.props.setEditorDate}\r\n                setEditorText={note.props.setEditorText}\r\n            />\r\n        })\r\n        setNoteList(changedTextList)\r\n    }\r\n\r\n    const deleteNote = (e) => {\r\n        //Get active note index\r\n        let c;\r\n        noteList.sort((e1, e2) => e2.props.createdAt - e1.props.createdAt).forEach((note, i) => {\r\n            if (note.props.isActive === 'note active'){\r\n                c = i;\r\n            }\r\n        });\r\n        c = (c === 0) ? c : (c - 1);\r\n\r\n        //Update editor states\r\n        let [newTitle, newDate, newText] = [];\r\n        noteList.sort((e1, e2) => e2.props.createdAt - e1.props.createdAt).forEach((note, i) => {\r\n            if (i === c){\r\n                [newTitle, newDate, newText] = [note.props.title, note.props.createdAt, note.props.newText]\r\n            }\r\n        })\r\n        setEditorTitle((noteList.length === 1) ? '' : newTitle)\r\n        setEditorDate((noteList.length === 1) ? '' : newDate)\r\n        setEditorText((noteList.length === 1) ? '' : newText)\r\n\r\n        //Update noteList state by removing active note\r\n        setNoteList(noteList.sort((e1, e2) => e2.props.dateForSort - e1.dateForSort).filter((note, i) => {\r\n            if (note.props.isActive !== 'note active'){\r\n                return note;\r\n            } \r\n        }).map((note, i) => {\r\n            return <Note \r\n                        key={note.key}\r\n                        title={note.props.title}\r\n                        createdAt={note.props.createdAt}\r\n                        noteText={note.props.noteText}\r\n                        dateForSort={note.props.dateForSort}\r\n                        isActive={(i === c) ? 'note active' : 'note'}\r\n                        listID={note.props.listID}\r\n                        noteList={note.props.noteList}\r\n                        setNoteList={note.props.setNoteList}\r\n                        setEditorTitle={note.props.setEditorTitle}\r\n                        setEditorDate={note.props.setEditorDate}\r\n                        setEditorText={note.props.setEditorText}\r\n                    />\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <div id=\"editor\">\r\n            <div id=\"editor-header\">\r\n                <textarea rows=\"1\" value={editorTitle} onChange={changeTitle} ></textarea>\r\n                <h5>{editorDate}</h5>\r\n                <FaTrashAlt id=\"editor-delete-btn\" onClick={deleteNote}/>\r\n            </div>  \r\n            <textarea id=\"editor-main-editor\" value={editorText} onChange={changeText}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","import { useState, useEffect } from 'react';\r\nimport Library from './Library.js'\r\nimport Editor from './Editor.js';\r\nimport Note from './Note';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction Wrapper(){\r\n    //States\r\n    const [noteList, setNoteList] = useState();\r\n    const [editorTitle, setEditorTitle] = useState('');\r\n    const [editorDate, setEditorDate] = useState('');\r\n    const [editorText, setEditorText] = useState('');\r\n    const [appStatus, setAppStatus] = useState('init');\r\n\r\n    //On page load get notes data from local storage\r\n    if (appStatus === 'init'){\r\n        //Get local storage data and convert date prop\r\n        const localStorageValue = localStorage.getItem('myNotes');\r\n        let newNotesList = (localStorageValue !== undefined && localStorageValue !== null)\r\n            ? JSON.parse(localStorageValue).map(note => {\r\n                let date = new Date(Date.parse(note.dateForSort))  \r\n                return {\r\n                    ...note,\r\n                    dateForSort: date\r\n                }\r\n            })\r\n            : null;\r\n\r\n        //Create new components based on local storage data\r\n        let noteListFromLS;\r\n        if (newNotesList != null){\r\n            noteListFromLS = newNotesList.sort((e1, e2) => e2 - e1).map((note, i) => {\r\n                return (\r\n                    <Note \r\n                        key={uuidv4()}\r\n                        title={note.title}\r\n                        createdAt={note.createdAt}\r\n                        noteText={note.noteText}\r\n                        dateForSort={note.dateForSort}\r\n                        isActive={note.isActive}\r\n                        listID={i}\r\n                        noteList={null}\r\n                        setNoteList={setNoteList}\r\n                        setEditorTitle={setEditorTitle}\r\n                        setEditorDate={setEditorDate}\r\n                        setEditorText={setEditorText}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        \r\n        //Update states\r\n        setAppStatus('loaded');\r\n        setNoteList(noteListFromLS)\r\n        setEditorTitle((noteListFromLS.length > 0) ? noteListFromLS[0].props.title : '')\r\n        setEditorDate((noteListFromLS.length > 0) ? noteListFromLS[0].props.createdAt : '')\r\n        setEditorText((noteListFromLS.length > 0) ? noteListFromLS[0].props.noteText : '')\r\n    }   \r\n\r\n    useEffect(() => {\r\n        //Update local storage whenever the noteList state changes\r\n        if (noteList !== null && noteList !== undefined){\r\n            const newList = JSON.stringify(noteList.map(note =>{\r\n                return {\r\n                    createdAt: note.props.createdAt,\r\n                    dateForSort: String(note.props.dateForSort),\r\n                    isActive: note.props.isActive,\r\n                    noteText: note.props.noteText,\r\n                    title: note.props.title\r\n                }\r\n            }))\r\n\r\n            localStorage.setItem('myNotes', newList)\r\n        }\r\n    }, [noteList])\r\n\r\n    return(\r\n        <div id=\"wrapper\">\r\n            <Library\r\n                noteList={noteList}\r\n                setNoteList={setNoteList}\r\n                setEditorTitle={setEditorTitle}\r\n                setEditorDate={setEditorDate}\r\n                setEditorText={setEditorText}\r\n            />\r\n            <Editor\r\n                editorTitle={editorTitle}\r\n                editorDate={editorDate}\r\n                editorText={editorText}\r\n                setEditorTitle={setEditorTitle}\r\n                setEditorText={setEditorText}\r\n                setEditorDate={setEditorDate}\r\n                noteList={noteList}\r\n                setNoteList={setNoteList}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from 'react';\r\nimport loaderImg from '../logo.svg'\r\n\r\nfunction Loader(){\r\n\r\n    const [loaderOpacity, setLoaderOpacity] = useState(1);\r\n    const [loaderDisplay, setLoaderDisplay] = useState('flex');\r\n    const [imgOpacity, setImgOpacity] = useState(1);\r\n\r\n    setTimeout(() => {\r\n        setImgOpacity(0)\r\n        setTimeout(() => setLoaderOpacity(0), 500);\r\n        setTimeout(() => setLoaderDisplay('none'), 1000);\r\n    }, 750);\r\n\r\n    return (\r\n        <div id=\"loader\" style={ { opacity: `${loaderOpacity}`, display: `${loaderDisplay}`} }>\r\n            <img src={loaderImg} alt=\"loader-img\" style={ { opacity: `${imgOpacity}`} } />\r\n            <p id=\"loader-p\" style={ { opacity: `${imgOpacity}`} }>Logo created by: Marton Izsaki ⓒ2021</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {FaInfoCircle} from 'react-icons/fa';\r\n\r\nfunction Info(props){\r\n    const closeInfo = (e) => {\r\n        if (!document.getElementById('info-message-wrapper').contains(e.target)){\r\n            props.setInfoOpacity(0);\r\n            setTimeout(() => props.setInfoDisplay('none'), 500);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"info\" style={ { display: `${props.infoDisplay}`, opacity: `${props.infoOpacity}` } } onClick={(e) => closeInfo(e)}>\r\n            <div id=\"info-message-wrapper\">\r\n                <p><FaInfoCircle id='info-message-icon' /><br/><b>Data storage: </b>This application is using the browser's local storage to save your notes. Please make sure to keep this in mind when clearing browser history, as you can loose your notes when clearing the local storage.</p>\r\n                <p><FaInfoCircle id='info-message-icon' /><br/><b>Privacy note:</b> As this application is not using a login system, anyone accessing this user on your computer will be able to see notes you store in this application. Passwords, or sensitive data is not recommended to store in this application, and the author of the application can't take responsibility for any harm caused by ignoring this note.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import './style/style.scss';\nimport Wrapper from './components/Wrapper';\nimport Loader from './components/Loader';\nimport Info from './components/Info';\nimport {FaInfoCircle} from 'react-icons/fa';\nimport { useState } from 'react';\n\nfunction App() {\n  const [infoDisplay, setInfoDisplay] = useState('none');\n  const [infoOpacity, setInfoOpacity] = useState(0);\n\n  const displayInfo = () => {\n    setInfoDisplay('flex');\n    setTimeout(() => setInfoOpacity(1), 10);\n  }\n\n  return (\n    <div className=\"App\">\n      <Loader />\n      <Info infoDisplay={infoDisplay} infoOpacity={infoOpacity} setInfoDisplay={setInfoDisplay} setInfoOpacity={setInfoOpacity} />\n      <Wrapper />\n      <FaInfoCircle id='info-btn' onClick={() => displayInfo()} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}